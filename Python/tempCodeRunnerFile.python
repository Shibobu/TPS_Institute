"""
Trabajo Practico Nº3
Tomando como base el Trabajo Practico Nº2, incluir cada
ejercicio dentro de una funcion de acuerdo a la siguiente
forma:

def main():
    print("¡Hola Mundo!")

if __name__ == "main":
    main()

"""

import string


def ingresoSTR(arg: string):
    return str(input(arg))

def ingresoINT(arg : string):
    return int(input(arg))

# Ejercicio 1

"""
Escribir un programa que solicite la cantidad de
kilometros recorridos por un auto y la cantidad
total de litros que consumio en ese recorrido.
Luego mostrar por pantalla el consumo de
combustible por kilometro
"""
def cons_x_Lt():

    km = ingresoINT("Ingrese la cantidad de kilometros recorridos")
    lt = ingresoINT("Ingrese la cantidad de litros consumidos")

    print("La cantidad de litros consumidos por "
            + "kilometros, es: " + str(lt/km))

# Ejercicio 2

"""
Ejercicio 2:
Escribir un programa que solicite un numero, luego
le reste el 15%, almacenado todo en una unica variable.
A continuacion mostrar el resultado final por pantalla
"""
def quince_descuento():

    num = ingresoINT("Ingrese el numero a restar el 15%: ")
    num *=0.85

    print("El resultado es: "
            + str(num))

# Ejercicio 3

"""
Ejercicio 3:
Escribir un programa que solicite un numero entero y
muestre por pantalla si el numero es par o no.
Recordar que un numero es par si al dividirlo por 2,
su resto es igual 0.
"""

def parImpar():
    pd = ingresoINT("Ingrese el numero a comprobar si es par o no")

    if pd%2 != 0:

        print("El numero no es par")
    else: print("El numero es par")

# Ejercicio 4

"""
Ejercicio 4:
Escribir un programa que solicite el ingreso de una letra,
luego valide se es una vocal mostrando el mensaje
"Es vocal" o "No es vocal"
"""

def vocales(letter : string):
    vowels = "aeiou"

    if vowels.__contains__(letter):
        return True
    else: return False

def voc_constantes():
    letter = ingresoSTR("Ingrese la letra a comprobar ")
    letter = letter.lower()

    if (letter <= "z") & (letter >= "a"):

        if(vocales(letter)):
            print("Es vocal")  
        else: print("No es vocal")

    else: print("No es una letra")

# Ejercicio 5

"""
Ejercicio 5:
Escribir un programa que funcione como un examen tipo múltiple de Choice.
Pregunte al usuario: “¿Qué color se genera mezclando azul y amarillo?”
y muestre las opciones “
1‐Rojo; 
2‐ Violeta; 
3‐ Verde; 
4‐ Negro” 
Luego de recibida la respuesta muestre el mensaje de “Respuesta Correcta”
o “Respuesta incorrecta” según corresponda. (Utilice la estructura 
Según ‐ de Selección Múltiple)
"""

def colorMenu():
    cad =("Elija la opcion correcta: \n"
        + " ¿Que color se genera mezclando azul y amarillo?"
        + "\n1‐ Rojo" 
        + "\n2‐ Violeta"  
        + "\n3‐ Verde;" 
        + "\n4‐ Negro")

    return ingresoINT(cad)

def respuesta():

    match colorMenu():
        case 3: 
            print("Respuesta correcta!")

        case default: 
            print("Respuesta Incorrecta!")
        
# Menu

def menu():
    cad = ("Elija la operacion que desea realizar:"
            + "\n 1- Calcular el consumo"
            + "\n 2- Aplicar un 15% " 
            + "de descuento"
            + "\n 3- Determinar Par o Impar"
            + "\n 4- Determinar vocal o consonante"
            + "\n 5- Examen de colores"
            + "\n 6- Salir")

    return ingresoINT(cad)

def main():

    b= True

    while b:
        match menu():
            case 1:
                print("Consumo X Litro")
                cons_x_Lt()

            case 2:
                print("15% de descuento")
                quince_descuento()

            case 3:
                print("Determinar Par o Impar")
                parImpar()

            case 4:
                print("Determinar Vocales")
                voc_constantes()

            case 5:
                print("Examen")
                respuesta()

            case default:
                print("Salir")
                b = False
    print(f"SEE YOU SPACE COWBOY...",italic=True)

if __name__ == "__main__": 
    main()